%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Proposta %% %%  a. implementar a série discreta%%  Xn = 1/N somatoria_{k=0}^{N-1} gk(k) exp(-j*n*k*2*pi/N)%%  b. visualizar graficamente%%  c. interpretar o resultado%%  d. comparar com tempo%%%%%%  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Carrega a biblioteca de controlepkg load control;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Sinal: calibração e sinal real%%%% trabalhar com um sinal amostrado%% %%% sinal artificial de referência - calibrar o Fourier nas mesmas condições%%%% criar um senoide artificial: amplitude - Ap, frequência - fo e fase - theta%% %%   sinal = Ap * cos (2 * pi * fo * t + theta)%%% recuperar o sinal a partir de um arquivo - real[xt,fs] = audioread ('Gaita_Blues.wav');       % transformei um arquivo .wav em um vetor g(k)                                               % recuperei a taxa de amostragem - fs%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Como usar o comando lsim%%%%% [Y, T, X] = lsim (SYS, U, T)%%% SYS - sistema%%%%% U   - entrada%%%%% T   - Tempo%%% Definindo o sistema - SYS - exemplo##Transfer function 'ans' from input 'u1' to output ...####        1## y1:  -----##      s + 1####Continuous-time model.N   = 1;D   = [1 1];SYS = tf(N,D);%%% Definindo a entradaU   = xt;%%% criar o vetor tempo%%% fs -  número de amostras por segundoT          = 1/fs;             % tempo entre as amostrasNamostras  = length(xt);       % determina o número de amostrasTfinal     = (Namostras - 1)*T;tempo = [0:T:Tfinal];%%% Aplico a entrada U no sistema SYS[Y, T, X] = lsim (SYS, U, T);%%% Visualizaçãofigure(1)subplot(2,1,1); plot(tempo,xt,'linewidth',2);subplot(2,1,2); plot(tempo,Y,'linewidth',2);%%% Gerar artificialmente o sinal xt