%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;                        % apaga todas as variáveisclose all;                        % fechar as figurasclc;                              % limpa o ambiente de simulaçãopkg load symbolic                 % somente para o OctaveN = 5;                            % número de harmôncias para análise%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Definir o sinal g(t) - onda pulsadag  = @(t)  exp(-t);                % função do sinalT0 = 1;                            % periodo do sinal   w0  = 2*pi/T0;                     % frequência angularf0  = 1/T0;                        % frequência angularn   = [-N:1:N];                    % harmônicas de Fourierf   = n*f0;                        % frequência das harmônicas%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Calcular a integral de Fourier : tempo em frequênciasyms t n T0Dn  = inv(T0)*int(exp(-(j*n*w0+1)*t),t,0,T0);D0  = inv(T0)*int(exp(-t),t,0,T0) ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Calcular os valores numéricos de DnT0  = 1;                            % redefine periodon   = [-N:1:N];                     % redefine os valores de nDn  = eval(Dn);                     % valores numéricosD0  = eval(D0);                     % valor médioDn(N+1) = D0;                       % substitui o valor correto de D0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Sintese do sinal g(t) --> a partir de Dn, somar as projeções %%  4.1 - Definir o tempoM    = 1000;                        % número de pontos de simulaçãoTs   = T0/M;                        % passo de simulaçãotempo= [0:Ts:T0];                   % vetor tempo%%  4.2 - Somatória do sinalsomatoria = 0;                      % incializa a somatóriafor k = 0:2*N                       % 2*N + 1 --> pontos    somatoria = somatoria + Dn(k+1)*exp(j*n(k+1)*w0*tempo);  endgt   =  somatoria;                  % sinal sintetizado%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 5 - Visualizar: Dn (análise) e g(t) (síntese) figure(1)                           % domínio da frequênciastem(f,abs(Dn));xlabel('Frequência em Hertz')ylabel('Amplitude em Volts')title('Espectro de Amplitudes')figure(2)                           % domínio do tempoplot(tempo,gt,"linewidth", 3, tempo,g(tempo),"linewidth", 2);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Sinal no tempo')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 6 - Cáculo de potência do sinal%%  6.1 - Cáculo no tempoPg  =  inv(T0)* int(A1^2,t,0,tau) + inv(T0)* int(A2^2,t,tau,T0);Pg  =  eval(Pg);%%  6.2 - Cáculo na frequênciaVetor = [abs(Dn(N+1)^2) 2*abs(Dn(N+2:end)).^2];Pgn   = cumsum(Vetor);clc;Banda = (Pgn(end)/Pg)*100;