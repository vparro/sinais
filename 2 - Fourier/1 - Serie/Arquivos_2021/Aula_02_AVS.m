%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpeza%%% Comentáriosclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Carregar bibliotecaspkg load symbolic;  % biblioteca simbólica%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Descrever a onda quadrada - g(t) %% Ap    = +1;       % define o nível positivo da onda quadradaAn    = -1;       % define o nível negativo da onda quadradato    = -pi/2;    % ponto inicial de g(t)Tp    = pi;       % tempo positivo de g(t)Tn    = pi;       % tempo negativo de g(t)%%% Valores calculadosT     = Tp + Tn;  % período de g(t)w     = 2*pi/T;   % frequência angularf     = 1/T;      % frequência em Hz%%% Definindo os valores de nN     = 100;      % Número de sinais que desejamos decomporn     = [1:1:N];  % valores de n para os sinais de referência%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Análise%% %%% c1 = Nc/Dc%%%%%% Nc = int_T g(t) cos(t) dt%%%%%% Dc = int_T cos^2(t) dtsyms n t      % informando ao Octave que a variável               % t é simbólica e não numérica%%% Calculando o numeradorNc = int(Ap*cos(n*t),t,to,to+Tp)+int(An*cos(n*t),t,to+Tp,to+T);%%% integral(função, variável, extremo_i, extremo_s)%%% Calculando o denominadorDc = int(cos(n*t)^2,t,to,to+T);%%% Derminando valores numéricos%%% Definindo os valores de nN     = 100;      % Número de sinais que desejamos decomporn     = [1:1:N];  % valores de n para os sinais de referênciafreq  = n*f;      % vetor frequência%%% Calculo cn numericamentecn    = eval(Nc/Dc) % transforma a expressão litearal em numérica.%%% Visualizar o resultado --> espectro de amplitudesfigure(1)stem(freq,cn);title('Espectro de amplitudes')ylabel('Amplitude')xlabel( 'Frequencia em Hz')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Síntese%% M     = 1000;             % número de pontos em um período;tempo = linspace(0,T,M);  % vetor tempo propriamente ditoaux   = 0;                % valor inicial da somatóriafor n = 1:N    %%% somatória    aux = aux + cn(n)*cos(n*tempo);  endgt_sintetizado = aux;     % sinal sintetizadofigure(2)plot(tempo,gt_sintetizado);title('Sinal sintetizado')ylabel('Amplitude')xlabel( 'tempo em segundos')