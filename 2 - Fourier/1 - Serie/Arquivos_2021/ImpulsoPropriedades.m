%%% Resposta impulsiva e propriedades de fourier%%% 0 - Boas práticas clear all;          % limpa as variáveisclose all;          % fecha todas as figurasclc;                % limpa a telapkg load symbolic;  % carrega o pacote simbólico - Octave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código - variáveis globais e configuráveis                 vis = 1;          % habilita gráfico quando 1%% definindo o númerode harmônicas envolvidas na análise / sintese                 N = 100;          % Número de harmônicas para análise                 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Modelagem do sinal%% onda quadrada - q(t) - paramterizada%% Definindo uma onfa quadrada%% Ona pulsada de dois níveis, período To e largura tau  sinal.tipo       ="quadrada"      % Define tipo de sinal  sinal.Ap         = 1;             % Amplitude em nível alto  sinal.An         = 0;             % Amplitude em nível baixo  sinal.largura    = 0.5;           % Duração em nível alto  sinal.periodo    = 1;             % Período  sinal.harmonicas = N;             % Número de harmônicas  %% Definindo um impulso "aproximado" - pulso bem estreito%% Ona pulsada de dois níveis, período To e largura tau  impulso.tipo       ="quadrada"      % Define tipo de sinal  impulso.Ap         = 1/0.005;       % Amplitude em nível alto  impulso.An         = 0;             % Amplitude em nível baixo  impulso.largura    = 0.005;         % Duração em nível alto  impulso.periodo    = 100;           % Período  impulso.harmonicas = N;             % Número de harmônicas  %%%%%%%%% Análise  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Analisando a onda quadrada%% Tempo para frequência  [D_o,Dn,f,Pg,PN] = sFourier(sinal);  disp("Valor Médio:"); D_o  disp("Potência:"); Pg  disp("Potência (N):"); PN(end)  %% Analisando o impulso%% Tempo para frequência  [D_oi,Dni,fi,Pgi,PNi] = sFourier(impulso);  disp("Valor Médio:"); D_o  disp("Potência:"); Pg  disp("Potência (N):"); PN(end)  %%%%%%%%% Síntese  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%% Definindo o vetor de sintese  sintese.pontos   = 1000;  sintese.periodos = 2;  sintese.periodo  = sinal.periodo;  sintese.Dn       = Dn;  sintese.N        = sinal.harmonicas;  %% Sintetizando o sinal%% Frequência para tempo  [tempo,sinal] = sinteseFourier (sintese);  %%% Definindo o vetor de sintese  sintese.pontos   = 1000;  sintese.periodos = 2;  sintese.periodo  = impulso.periodo;  sintese.Dn       = Dni;  sintese.N        = impulso.harmonicas;  %% Sintetizando o sinal%% Frequência para tempo  [tempo,impulso] = sinteseFourier (sintese);  %%%%%%%%% Filtragem  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%% Definindo o filtrowc      =    2*pi/sintese.periodo;HFPB    =    @(w,wc)   wc./(j*w+wc);HFPA    =    @(w,wc)   j*w./(j*w+wc);   %%% Resposta impulsiva aproximada do Passa baixasYFPB    =     Dni.*HFPB(2*pi*fi,wc);  %%% Resposta impulsiva aproximada do Passa altasYFPA    =     Dni.*HFPA(2*pi*fi,wc);%%%%%%%%% Síntese  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%% Definindo o vetor de sintese  sintese.pontos   = 1000;  sintese.periodos = 2;  sintese.periodo  = sintese.periodo;  sintese.Dn       = YFPB;  sintese.N        = sintese.N;  %% Sintetizando o sinal%% Frequência para tempo  [tempo,yPB] = sinteseFourier (sintese);  %%% Definindo o vetor de sintese  sintese.pontos   = 1000;  sintese.periodos = 2;  sintese.periodo  = sintese.periodo;  sintese.Dn       = YFPA;  sintese.N        = sintese.N;  %% Sintetizando o sinal%% Frequência para tempo  [tempo,yPA] = sinteseFourier (sintese);  %%%%%%%%% Propriedades  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  %%% Derivação  %%%%%%%%% Síntese  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    %%% Quadrada  sintese.pontos   = 1000;  sintese.periodos = 2;  sintese.periodo  = 1;  sintese.Dn       = (Dn(1:end).*(j*f(1:end)*2*pi));  sintese.N        = sintese.N;  %% Sintetizando o sinal%% Frequência para tempo  [tempo,quadradaD] = sinteseFourier (sintese);        if vis == 1      figure(7)set(gca, "linewidth", 3, "fontsize", 13)subplot(1,2,1),plot(tempo,quadradaD,"linewidth", 3)title('Derivada da onda quadrada');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')subplot(1,2,2),plot(tempo,sinal,"linewidth", 3)title('Onda quadrada');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')figure(6) set(gca, "linewidth", 3, "fontsize", 13)subplot(2,1,1),plot(f,(abs(YFPB)),"linewidth", 3); title('Resposta do filtro passa baixas');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts') subplot(2,1,2),plot(f,(abs(YFPA)),"linewidth", 3); title('Resposta do filtro passa altas');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts') figure(5)set(gca, "linewidth", 3, "fontsize", 13)subplot(1,2,1),plot(tempo,yPB,"linewidth", 3)title('Resposta do filtro Passa Baixas');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')subplot(1,2,2),plot(tempo,yPA,"linewidth", 3)title('Resposta do filtro Passa Altas');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')figure(4) set(gca, "linewidth", 3, "fontsize", 13)subplot(2,1,1),stem(f,abs(Dn),"linewidth", 3); title('Serie de Fourier do sinal');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts') subplot(2,1,2),stem(f,abs(Dni),"linewidth", 3); title('Serie de Fourier do impulso');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts') figure(3)set(gca, "linewidth", 3, "fontsize", 13)subplot(1,2,1),plot(tempo,sinal,"linewidth", 3)title('Onda quadrada');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')subplot(1,2,2),plot(tempo,impulso,"linewidth", 3)title('Pulso estreito - impulso');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')%%% Visualizando o sinal reconstruidofigure(2)plot(tempo,sinal,"linewidth", 3)title('Reconstrucao do sinal g(t)');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')set(gca, "linewidth", 3, "fontsize", 13)%%% Visualizando os espectrosfigure(1) stem(f,abs(Dn),"linewidth", 3); title('Serie de Fourier do sinal g(t)');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts') set(gca, "linewidth", 3, "fontsize", 13) end