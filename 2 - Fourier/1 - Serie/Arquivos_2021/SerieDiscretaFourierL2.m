%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  0 -  Proposta de trabalho%%%%  a. Analisar as cinco vogais: Xa, Xe, Xi, Xo, e Xu.%%  b. Os tempos de execução de cada vogal.%%  c. O que você observa de diferente em cada série de Fourier.%%  d. Você conseguiria analisar no tempo?%%  e. Como você transformaria o "for" em produto matricial como foi feito na teoria?%%  %%  Entrega 23/03 até 23:59 - individual%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Problema%%%% %% sinal g(k) - sinal amostrado%%% sinal de referência - artificial%%% com senoidesfs = 10;                           % frequência de amostragemfo = 1 ;                           % frequência da senoide - máximo de 5HzTo = 1/fo;                         % período da senoidewo = 2*pi*fo;                      % frequência angularNp = 10;                           % número de períodost  = linspace(0,Np*To,Np*fs);      % tempo de sintesegk = 1 + cos(2*pi*t);                  % criei uma senoide artificial%%% Visualizaçãofigure(1)stem(t,gk,'k-','linewidth',3)         % configura plot(x,y, cor azul e linha cheia)xlabel('Tempo em segundos')           % tempo em segundosylabel('Amplitude')                   % amplitude em voltstitle('Sinal g(k) sintetizado')       % títulogrid%%% sinal a ser trabalhado - gk% [gk,fs] = audioread('a.wav');     % leitura de um sinal real - volga /a/.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  3 - Pré - processamento do sinal%% %%  Ambiente de cálculo integral e simbólico%%  %%  X[n] = 1/N somatoria_{k=0}^{N-1} g(k) exp(-j*n*k*2*pi/N)%%%%N          = length(gk);               % número de pontos de g(k)Ts         = 1/fs;                     % Taxa de amostragemDuracao    = N*Ts;                     % duração do sinal g(k)ws         = 2*pi*fs;                  % frequencia angulartempo      = linspace(0,Duracao,N);    % vetor tempo computacional fmax       = fs/2;                     % frequência máximafrequencia = linspace(-fmax,fmax,N);   % frequências de interesse                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 -  Cáclculo de X(n)%%  %%  X[n] = 1/N somatoria_{k=0}^{N-1} g(k) exp(-j*n*k*2*pi/N)%%%%%%% primeira forma: utilizando estrutura fortic;                                    % inicia um contator de tempofor n = 0 : N-1                          % N pontos     aux_k = 0;                           % valor inicial de aux_k       for k = 0 : N-1                     % lendo N pontos                                        % 1 : N --> octave                                        % +1 transformo a variável matemática em índice                                        % determina a se'rie discreta de Fourier        aux_k = aux_k + gk(k+1)*exp(-j*n*k*2*pi/N);        end        Xn(n+1) = aux_k;    end    toc;                                    % determina o tempo decorrido%%% segunda estrutura: utilizando algebra lineartic;                                % inicia um contator de tempotoc;                                % determina o tempo decorrido%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  6 -  Visualização%%%%figure(2)plot(tempo,gk,'k-','linewidth',3)     % configura plot(x,y, cor azul e linha cheia)xlabel('Tempo em segundos')           % tempo em segundosylabel('Amplitude')                   % amplitude em voltstitle('Sinal g(k) amostrado')         % títulogridfigure(3)%%% fftshift rotaciona o vetor 0 --> 2*pi ; -pi --> +pistem(frequencia,fftshift(abs(Xn)),'k-','linewidth',3)     % configura plot(x,y, cor azul e linha cheia)xlabel('Frequência em Hz')                      % tempo em segundosylabel('Amplitude')                             % amplitude em voltstitle('Espectro de amplitude')                  % títulogrid