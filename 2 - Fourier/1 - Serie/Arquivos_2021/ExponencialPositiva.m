%% Exponencial Positivaclear all;clc;close all;pkg load symbolic;                    % Usado somente para Octave%% Definindo o sinal a ser estudado - g(t) gt = @(t) (1-exp(-10*t) To = 1; fo = inv(To); wo = 2*pi*fo; N = 10; n=[-N:1:N]; f = n*fo;%%% Vetor tempo para visualização do sinal%%% diferente da variável simbólica t%%% para efeito de organização da solução%%% existem outros caminhos M = 1000; Ts = To/M; tempo = [0:Ts:3*To];                        % Três períodos do sinal tempo3 = [0:Ts:To];                         % Modifica ao vetor tempo gt3 = [gt(tempo3) gt(tempo3) gt(tempo3)];   % Concatena três período de gt gt3 = gt3(1:end-2); %% Determinando o termo Dn simbolicamentesyms n tDn = inv(To)*int(gt.*exp(-j*n*wo*t),t,0,To);D_o = inv(To)*int(gt,t,0,To);%% Determinando o termo Dn numericamenten=[-N:1:N]; Dn = eval(Dn);D_o = eval(D_o);     % Corrigindo o valor médio (NaN devido a indeterminação)Dn(N+1) = D_o;       % Subistituindo no vetor de respostas%% Visualizando o espector de Amplitude figure(1) stem(f,abs(Dn));                          % Na frequência o sinal é discretotitle('Série de Fourier do sinal g(t)');xlabel('Frequência em Hz');ylabel('Amplitude em  volts')%% Sintetizando o sinaln=[-N:1:N];aux  = 0;             for k = 0 : 2*N          aux = aux + Dn(k+1)*exp(j*n(k+1)*wo*tempo);  endgr = aux;%% Visualizando o sinal reconstruidofigure(2)plot(tempo,gt3, "linewidth", 3,tempo,aux, "linewidth", 3)set(gca, "linewidth", 3, "fontsize", 23);title('Reconstrução do sinal g(t)');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')%% Determinando a potência do sinal g(t)Pg = inv(To)*int((1-exp(t))^2,t,0,To);Pg = eval(Pg);%%% Verifica a potência pelo teorema de PaservalPN = cumsum([Dn(N+1)^2 2*abs(Dn(N+2:end)).^2]);%% Acumula os valores elemento a elementofigure(3)plot(f(N+1:end),PN,f(N+1:end),ones(1,N+1)*Pg)title('Potência total e em função do harmônico');xlabel('Harmônico');ylabel('Potência em W')