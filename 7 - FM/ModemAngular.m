%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;                        % apaga todas as variáveisclose all;                        % fechar as figurasclc;                              % limpa o ambiente de simulaçãopkg load symbolic                 % somente para o Octavepkg load signal%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Criar um sinal modulado em fase%%% Mensagem pulsada - m(t) - onda quadradatempo = linspace(0,2,1000);       %%% dois períodosfm    = 1;                        %%% 1 períodowm    = 2*pi*fm;Tm    = 1/fm;DC    = 50;Am    = 2;mt    = Am*square(wm*tempo,DC); % mt    = Am*sin(wm*tempo); %%% Cálculo da frequênciaTs    = 2/1000;                   %%% amostragemfs    = 1/Ts;Np    = 1000-1;freq  = linspace(-fs/2,fs/2,Np);%%% Visualizando a mensagemfigure(1)plot(tempo,mt);%%% modifica parâmetros do gráficoset(findall(gcf,'Type','line'),'LineWidth',3);set(gca,'FontSize',14,'LineWidth',2);  %%% Constante de miodulação - KpKp = pi/2;   %%%% a cada volt da mensagem ele defasa de pi/2%%% Sinal modulado - fi_PMA      = 1;fc     = 10;Tc     = 1/fc;wc     = 2*pi*fc;PMt    = A*cos(wc*tempo + Kp*mt); %%% Visualizando a mensagemfigure(2)plot(tempo,mt, 'b-.'); hold;  plot(tempo,PMt, 'k-') %%% modifica parâmetros do gráficoset(findall(gcf,'Type','line'),'LineWidth',6);set(gca,'FontSize',14,'LineWidth',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Criar um sinal modulado em frequência%%% Constante de miodulação - KpKw = 100;   %%%% a cada volt da mensagem ele varia 1 rd/s%%% Sinal modulado - fi_PMA      = 1;fc     = 10;Tc     = 1/fc;wc     = 2*pi*fc;%%% criei uma frequência proporcional a mensagemw      =  wc + Kw*mt;%%% integrando a mensagemintegral_mt = cumsum(mt);integral_mt = integral_mt/(2*max(integral_mt));%%% sinal moduladoFMt    = A*cos(wc*tempo + Kw*integral_mt); %%% Visualizando a mensagemfigure(3)plot(tempo,mt, 'b-.'); hold;  plot(tempo,FMt, 'k-') %%% modifica parâmetros do gráficoset(findall(gcf,'Type','line'),'LineWidth',6);set(gca,'FontSize',14,'LineWidth',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Demodulador em frequência%%% aproximando a derivada do sinalSinal_dt   =  diff(FMt);%%% Visualizando a mensagemfigure(4)plot(tempo(1:end-1),Sinal_dt, 'b-.');  %%% modifica parâmetros do gráficoset(findall(gcf,'Type','line'),'LineWidth',6);set(gca,'FontSize',14,'LineWidth',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 5 - detetor de envoltória%% AMDigital        = Sinal_dt;diodo            = AMDigital > 0;       % implementa um diodo idealSinalRetificado  = AMDigital.*diodo;    % sinal retificado%%% implementação do filtroFPB = @(w,wc)     1./((j*w/wc) + 1);w   = 2*pi*freq;                         % frequênciafc  = 1;                                % frequência de corte em Hzwc  = fc*2*pi;                           % frequência de corteSR_w  = fft(SinalRetificado);            % Fourier - frequência% Sinal filtradoSF_w  = fftshift(SR_w).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc);               SinalFiltrado = ifft(fftshift(SF_w));             % sinal filtrado no tempo%%% Visualizaçãofigure(5)subplot(2,1,1)plot(freq,abs(fftshift(SR_w))/max(abs((SR_w))),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Mensagem');grid; hold;plot(freq,abs(FPB(w,wc)),"linewidth", 3);plot(freq,abs(FPB(w,wc).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc)),"linewidth", 3);subplot(2,1,2)plot(freq,abs((SF_w))/max(abs((SF_w))),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Sinal modulado');grid;%%% Visualizaçãofigure(6)subplot(2,1,1)plot(tempo(1:end-1),SinalRetificado,"linewidth", 3);xlabel('ttempo em segundos');ylabel('Módulo');title('Retificado');grid;subplot(2,1,2)plot(tempo(1:end-1), 10*SinalFiltrado,"linewidth", 3);xlabel('tempo em segundos');ylabel('Módulo');title('Mensagem recuperada');grid; hold;plot(tempo, mt,"linewidth", 3);