%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclc;clear all;close all;%%% carregando o pacote de controle e sinaispkg load control;pkg load signal;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  (z^2 - z(cos(2 pi Ts))) / (zˆ2 - 2z cos(2 pi Ts) + 1)w   = 2*pi;     %%% frequência analógicaT   = (2*pi)/w; %%% período analógicof   = 1/T;      %%% frequência do sinalfs  = 20*f;     %%% frequência de amostragem Ts  = 1/fs;     %%% tempo entre amostras.%%% Numerador discretoNz  =  [1 -cos(w*Ts) 0];Dz  =  [1 -2*cos(w*Ts) 1];%%% criando a função de transferência em z%%%  -- Function File: Z = tf ('Z', TSAM)Gz  = tf(Nz,Dz,Ts);##Transfer function 'Gz' from input 'u1' to output ...####       z^2 + 0.9511 z## y1:  -----------------##      z^2 - 1.902 z + 1####Sampling time: 0.05 s##Discrete-time model.%%% Síntese de sinal por resposta impulsivafigure(1)impz(Nz,Dz,100,fs)%%% Síntese de sinal por resposta recursiva##       z^2 - 0.9511 z## y1:  -----------------##      z^2 - 1.902 z + 1##       1 - 0.9511 z^(-1)## y1:  -----------------##      1 - 1.902 z^(-1) + z^(-2)%% y(n) = +1.902*y(n-1) - y(n-2)  + x(n) -0.9511 x(n-1)%%% gerando a somatória% y(0) = +1.902*y(-1) - y(-2)  + x(0) -0.9511 x(-1)% y(1) = +1.902*y(0) - y(-1)  + x(1) -0.9511 x(0)% y(2) = +1.902*y(1) - y(0)  + x(2) -0.9511 x(1)% y(3) = +1.902*y(2) - y(1)  + x(3) -0.9511 x(2)% y(4) = +1.902*y(3) - y(2)  + x(4) -0.9511 x(3)%%% Variáveis de software% ya  = y(n-1)% y2a = y(n-2)% xa  = x(n-1)%% y = +1.902*ya - y2a  + x -0.9511 xa%%% Criando a soluçãoya  = 0;     % inicia o valor com zeroy2a = 0;     % inicia o valor com zeroxa  = 0;     % inicia com o valor conhecidoNP  = 5;     % número de períodos%%% entrada - x(n) - impulsox = [1 zeros(1,NP*fs)];for n = 1 : NP*fs    y(n) = 1.902*ya-y2a+x(n)-0.9511*xa;    %%% corresponde a um cosseno de frequência w=2*pi - 1Hz    %%% atualizar os valores    y2a  = ya;  ya   = y(n);  xa   = x(n);  
endforfigure(2)stem(y)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% x[n] = e^(-nTs)*cos(4*pi*n*Ts)%%%% x[n] = e^(-nTs)*0.5*(e^(+j4*pi*n*Ts)+e^(-j4*pi*n*Ts))%%%% x[n] = 0.5*(e^(-nTs+j4*pi*n*Ts)+e^(-nTs-j4*pi*n*Ts))%%%% X(z) = 0.5*(z/(z - e^(-nTs+j4*pi*n*Ts)) + z/(z - e^(-nTs-j4*pi*n*Ts)))%%%%Ts  = Ts/2;                     % mantenho 20 pontos por períodoNz  = [1/2 0];                  % numeradorDz1 = [1 -exp(-Ts+j*4*pi*Ts)];   % denominadorDz2 = [1 -exp(-Ts-j*4*pi*Ts)];   % denominador## Dz1 =####   1.00000 + 0.00000i  -0.97542 - 0.15449i##   ## Dz2 =####   1.00000 + 0.00000i  -0.97542 + 0.15449iDz = conv(Dz1,Dz2);Nz = 0.5*conv(Nz,Dz2) + 0.5*conv(Nz,Dz1);%%%figure(3)impz(Nz,Dz,100,1/Ts)Gz = tf(Nz,Dz,Ts)%% Resultado##Transfer function 'Gz' from input 'u1' to output ...####        0.5 z^2 - 0.4638 z## y1:  ----------------------##      z^2 - 1.855 z + 0.9512####Sampling time: 0.025 s##Discrete-time model.  
