%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Projeto de filtro e sintese de voz%% %% a. projetar um filtro digital de fc = 1000Hz e aplicar ao sinal gaita.wav%% b. Discretizar a função de laplace da vogal /a/ e comparar no mesmo gráfico.%%%%  04 de junho de 2021%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Pacote de controlepkg load control         %%% Polos e zeros pkg load signal          %%% --> Bilinear%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Sinal: calibração e sinal real%%%% trabalhar com um sinal amostrado%% %% trabalhar com um sinal real - gaita - hamônica [gk,fs] = audioread ('gaita.wav');      % transformei um arquivo .wav em um vetor g(k) %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Projeto do filtro %%%% alpha = 2/T*RC%%%% Hfiltro = (z + 1)/((alpha + 1)*z + (1 - alpha))%%% %%% AmostragemT   = 1/fs;        %%% Filtro em Laplacefc    = 100;         %%% frequ6encia de cortewc    = 2*pi*fc;      %%% frequência angular de corteRC    = 1/wc;         %%% constante de tempo RCN     =  1;D     =  [RC 1];##Transfer function 'Hfa' from input 'u1' to output ...####             1## y1:  ---------------##      0.0001592 s + 1####Continuous-time model.%%% HfiltroA - LaplaceHfa   = tf(N,D);%%% Discretização - domínio Z - Bilinear[Nd,Dd] = bilinear(N,D,T);Hfd     = tf(Nd,Dd,T)##Transfer function 'Hfd' from input 'u1' to output ...####      0.0665 z + 0.0665## y1:  -----------------##          z - 0.867####Sampling time: 2.26757e-05 s##Discrete-time model.%%% Filtrando o sinal da gaitaY = filter(Nd, Dd, gk);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Comparação dos resultados%%figure(1)subplot(2,1,1); plot(gk);subplot(2,1,2); plot(Y);figure(2)%%% entradaGkF = fft(gk);GkF = fftshift(GkF/max(abs(GkF)));%%% saídaYF = fft(Y);YF = fftshift(YF/max(abs(YF)));%%% Eixo frequência - calibraçãoNp    =  length(gk);          freq  =  linspace(-fs/2, fs/2, Np);%%% visualizaçãosubplot(2,1,1); plot(freq, abs(GkF));axis([-5000 5000]);subplot(2,1,2); plot(freq, abs(YF));axis([-5000 5000]);