%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Exercícios de transformada Z%% %%%%%%  17 de Novembro de 2021%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Pacote de controlepkg load control         %%% Polos e zeros pkg load signal          %%% --> Bilinear%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 01%%% Função de transferênciaN = [1 1];D = [1 4 1];%%% Adotando T = 1sGz = tf(N,D,1);##Transfer function 'Gz' from input 'u1' to output ...####          z + 1## y1:  -------------##      z^2 + 4 z + 1####Sampling time: 1 s##Discrete-time model.%%% Estabilidade%%% Raizes do denominador e verificar se estão dentro %%% do circulo unitáriopolos = roots(D);%%% Módulo dos polos é maior que 1 - instável%%% Módulo dos polos é menor que 1 - estávelteste = abs(polos)>1;if sum(teste)==0  disp('estável')else  disp('instável')end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 02%%% Quando o sistema é oscilátório em Z?%%%%%% R: quando o módulo do polo é unitário%%% Como calcular a frequência de oscilação do sistema?%%%%%% R: 0 rd --> 0Hz e pi rd --> Fs/2%%%%%% R: pi/10 rd --> 60Hz e pi rd --> 600Hz%%%%%% pi/10 --> 18 graus (?)%%% descobri os polos que caracterizam o sistema%%% [X, Y] = pol2cart (THETA, R)%%% p1[R1,I1] = pol2cart(pi/10,1);p1      = R1 + j*I1;%%% p2[R2,I2] = pol2cart(-pi/10,1);p2      = R2 + j*I2;%%% Determinando o denominador%%% D(z) = (z - p1)*(z - p2) = z^2 - (p1 + p2)*z + p1p2D = conv([1 -p1],[1 -p2]);%%% D = [1.00000  -1.90211   1.00000];a = D(2)b = D(3)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 03%%% Polos (raizes do denominador)%%% delta = a^2 - 4%%% p1,2  = (-a +/- raiz(delta))/2a  = [-5:0.1:5];pa1 = @(a) (-a + sqrt(a.^2-4))/2pa2 = @(a) (-a - sqrt(a.^2-4))/2  polo1 = pa1(a);polo2 = pa2(a);figure(1)plot(a,abs(polo1)); hold; plot(a,abs(polo2))grid%%% Aprimora a aparência do gráficoset(findall(gcf,'Type','line'),'LineWidth',3);set(gca,'FontSize',14,'LineWidth',2);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 04%%% determinar os polos do sistemapolos = roots([1 4 40]);[Angulo, Modulo] = cart2pol(real(polos),imag(polos))Angulo = Angulo*180/pi## Modulo =####   6.3246##   6.3246%% Instável## Angulo =####   108.43##  -108.43%% Oscilatório%%% Como calcular a frequência de oscilação do sistema?%%%%%% R: 108 rd --> fx Hz e 180 --> Fs/2%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 05 - y(0) = 1 e y(−1) = 3%%% n = 0 --> y(−2) − 6y(−1) + 5y(0) = 0%%% n = 0 --> y(−2) − 6*3 + 5*1 = 0 --> y(-2) = 13%%% n = 1 --> 3 − 6*1 + 5y(1) = 0      --> y(1) = 0.6%%% n = 2 --> 1 − 6*0.6 + 5y(2) = 0    --> y(2) = 0.52%%% n = 3 --> 0.6 − 6*0.52 + 5y(3) = 0 --> y(3) = 0.504%%% Dada a Equação 05 o sistema é estável?%%% Tempo - equação de diferençasctime%%%%%% y(n − 2) − 6y(n − 1) + 5y(n) = 0%%% Frequência%%%%%% z^{-2}*Y(z) − 6z^{-1}*Y(z) + 5z^{0}*Y(z) = 0%%% Y(z)(z^{-2} − 6z^{-1} + 5z^{0}) = U(z)%%% Y(z)/U(z) = 1/(z^{-2} − 6z^{-1} + 5z^{0})%%% Y(z)/U(z) = z^{2}/(1 − 6z^{1} + 5z^{2})D     = [5 -6 1]polos = roots(D)abs(polos)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Questão 06 G(s) = 1/(s^2 + s + 1)roots([1 1 1])%%% O sistema no tempo contínuo é estável e oscilatório. %%% A oscilação é amortecida, logo o sistema converge.%%% Polos do sistema em tempo continuo##polos =####  -0.50000 + 0.86603i##  -0.50000 - 0.86603i%%% A frequência do sistema é w = 0.86603 rd/s%%% f = w/(2*pi) = 0.86603/(2*pi) = 0.13783 Hz%%% Fs > 2*f > 0.27567 Hz%%% Adotar Fs = 0.5Hz portanto T = 2s##     The following table summarizes the transformation:####          +---------------+-----------------------+----------------------+##          | Transform     | Zero at x             | Pole at x            |##          |    H(S)       |   H(S) = S-x          |    H(S)=1/(S-x)      |##          +---------------+-----------------------+----------------------+##          |       2 z-1   | zero: (2+xT)/(2-xT)   | zero: -1             |##          |  S -> - ---   | pole: -1              | pole: (2+xT)/(2-xT)  |##          |       T z+1   | gain: (2-xT)/T        | gain: (2-xT)/T       |##          +---------------+-----------------------+----------------------+####Transfer function 'G' from input 'u1' to output ...####           1## y1:  -----------##      s^2 + s + 1####Continuous-time model.##Transfer function 'G' from input 'u1' to output ...####                         1## Y(z)=   ---------------------------------##         ((z-1)/(z+1))^2 + (z-1)/(z+1) + 1####Continuous-time model.##Transfer function 'Gz' from input 'u1' to output ...####      0.3333 z^2 + 0.6667 z + 0.3333## y1:  ------------------------------##        z^2 - 2.22e-16 z + 0.3333####Sampling time: 2 s##Discrete-time model.